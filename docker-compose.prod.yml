version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile.prod
    restart: always
    command: gunicorn osu_course_search.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
    expose:
      - 8000
    env_file:
      - ./.env.prod
    depends_on:
      - db
  db:
    image: postgres:15
    restart: always
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    volumes:
      - static_volume:/home/app/web/staticfiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 443:443
      - 80:80
    depends_on:
      - web
  acme-companion:
    image: nginxproxy/acme-companion
    restart: always
    env_file:
      - ./.env.prod.proxy-companion
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy
  django-q:
    build: .
    restart: always
    command: python manage.py qcluster
    env_file:
      - ./.env.prod
    depends_on:
      - redis
      - db
      - web
  redis:
    image: redis:alpine
    restart: always
    ports:
      - 6379:6379
  selenium:
    image: selenium/standalone-chrome:latest
    restart: always
    volumes:
      - /dev/shm:/dev/shm

volumes:
  postgres_data:
  static_volume:
  certs:
  html:
  vhost:
  acme: